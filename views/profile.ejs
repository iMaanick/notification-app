<html>

<head>
    <title>

        <%= tittle %>

    </title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css' rel='stylesheet'>
    <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

    <script type='text/javascript' src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'></script>
    <!-- <link rel="stylesheet" href="style.css"> -->



    <style>
        ::-webkit-scrollbar {
            width: 8px;
        }

        /* Track */
        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        /* Handle */
        ::-webkit-scrollbar-thumb {
            background: #888;
        }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* body {
            margin: 0;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
            font-size: 2.5rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            text-align: left;
            background-color: #b0a9b9;
        } */

        i {
            font-style: italic;
        }

        .container {
            margin-top: 100px;
        }

        .card {
            box-shadow: 0 0.46875rem 2.1875rem rgba(4, 9, 20, 0.03), 0 0.9375rem 1.40625rem rgba(4, 9, 20, 0.03), 0 0.25rem 0.53125rem rgba(4, 9, 20, 0.05), 0 0.125rem 0.1875rem rgba(4, 9, 20, 0.03);
            border-width: 0;
            transition: all .2s;
        }

        .card-header:first-child {
            border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
        }

        .card-header {
            display: flex;
            align-items: center;
            border-bottom-width: 1px;
            padding-top: 0;
            padding-bottom: 0;
            padding-right: 0.625rem;
            height: 3.5rem;
            background-color: #fff;
        }

        .widget-subheading {
            color: #858a8e;
            font-size: 10px;
        }

        .card-header.card-header-tab .card-header-title {
            display: flex;
            align-items: center;
            white-space: nowrap;
        }

        .card-header .header-icon {
            font-size: 1.65rem;
            margin-right: 0.625rem;
        }

        .card-header.card-header-tab .card-header-title {
            display: flex;
            align-items: center;
            white-space: nowrap;
        }

        .btn-actions-pane-right {
            margin-left: auto;
            white-space: nowrap;
        }

        .text-capitalize {
            text-transform: capitalize !important;
        }

        .scroll-area-sm {
            height: 288px;
            overflow-x: hidden;
        }

        .list-group-item {
            position: relative;
            display: block;
            padding: 0.75rem 1.25rem;
            margin-bottom: -1px;
            background-color: #fff;
            border: 1px solid rgba(0, 0, 0, 0.125);
        }

        .list-group {
            display: flex;
            flex-direction: column;
            padding-left: 0;
            margin-bottom: 0;
        }

        .todo-indicator {
            position: absolute;
            width: 4px;
            height: 60%;
            border-radius: 0.3rem;
            left: 0.625rem;
            top: 20%;
            opacity: .6;
            transition: opacity .2s;
        }

        .bg-warning {
            background-color: #f7b924 !important;
        }

        .widget-content {
            padding: 1rem;
            flex-direction: row;
            align-items: center;
        }

        .widget-content .widget-content-wrapper {
            display: flex;
            flex: 1;
            position: relative;
            align-items: center;
        }

        .widget-content .widget-content-right.widget-content-actions {
            visibility: hidden;
            opacity: 0;
            transition: opacity .2s;
        }

        .widget-content .widget-content-right {
            margin-left: auto;
        }

        .btn:not(:disabled):not(.disabled) {
            cursor: pointer;
        }

        .btn {
            position: relative;
            transition: color 0.15s, background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
        }

        .btn-outline-success {
            color: #3ac47d;
            border-color: #3ac47d;
        }

        .btn-outline-success:hover {
            color: #fff;
            background-color: #3ac47d;
            border-color: #3ac47d;
        }

        .btn-outline-success:hover {
            color: #fff;
            background-color: #3ac47d;
            border-color: #3ac47d;
        }

        .btn-primary {
            color: #fff;
            background-color: #8a9cc5;
            border-color: #8699c9;
        }

        .btn {
            position: relative;
            transition: color 0.15s, background-color 0.15s, border-color 0.15s, box-shadow 0.15s;
            outline: none !important;
        }

        .card-footer {
            background-color: #fff;
        }

        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            padding: 0;
            font-family: 'Montserrat', sans-serif;
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: -1;
        }

        .wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-evenly;
            width: 100%;
            height: 10vh;
        }

        .open-popup {
            display: inline-block;
            padding: 15px 30px;
            text-transform: uppercase;
            background: #2982ff;
            color: #fff;
            text-decoration: none;
            font-weight: 500;
            border-radius: 5px;
        }

        .popup__bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: rgba(0, 0, 0, 0.5);
            opacity: 0;
            pointer-events: none;
            transition: 0.5s all;
        }

        .popup__bg.active {
            opacity: 1;
            pointer-events: all;
            transition: 0.5s all;
        }

        .popup {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
            background: #fff;
            width: 400px;
            padding: 25px;
            transition: 0.5s all;
        }

        .popup.active {
            transform: translate(-50%, -50%) scale(1);
            transition: 0.5s all;
        }

        .close-popup {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
        }

        .popup label {
            width: 100%;
            margin-bottom: 25px;
            display: flex;
            flex-direction: column-reverse;
        }

        .popup .label__text {
            font-size: 14px;
            text-transform: uppercase;
            font-weight: 500;
            color: #cfd0d3;
            margin-bottom: 5px;
        }

        .popup input {
            height: 45px;
            font-size: 18px;
            border: none;
            outline: none;
            border-bottom: 1px solid #cfd0d3;
        }

        .popup input:focus {
            border-bottom: 1px solid #2982ff;
        }

        .popup input:focus+.label__text {
            color: #2982ff;
        }

        .popup textarea {
            resize: none;
            width: 100%;
            height: 150px;
            border: none;
            outline: none;
            border-bottom: 1px solid #cfd0d3;
            font-size: 18px;
            padding-top: 5px;
        }

        .popup textarea:focus {
            border-bottom: 1px solid #2982ff;
        }

        .popup textarea:focus+.label__text {
            color: #2982ff;
        }

        .popup button {
            width: 100%;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #fff;
            font-size: 18px;
            border: 2px solid #2982ff;
            background: #2982ff;
            cursor: pointer;
            text-transform: uppercase;
            transition: 0.5s all;
        }

        .popup button:hover {
            background: #fff;
            color: #2982ff;
            transition: 0.5s all;
        }

        canvas {
            position: absolute;
            z-index: -10;
        }

        #bubbles {
            background: #477ab9;
            width: 100%;
            -webkit-transition: all 0.4s ease-in-out;
            -moz-transition: all 0.4s ease-in-out;
            -ms-transition: all 0.4s ease-in-out;
            -o-transition: all 0.4s ease-in-out;
            transition: all 0.4s ease-in-out;
        }

        #bubbles:hover {
            background: #3D689C;
        }

        .card {
            width: 600px;
            border: none;
            border-radius: 10px;

            background-color: #fff;
        }



        .stats {

            background: #f2f5f8 !important;

            color: #000 !important;
        }

        .articles {
            font-size: 20px;
            color: #a1aab9;
        }

        .number1 {
            font-weight: 500;
        }

        .followers {
            font-size: 20px;
            color: #a1aab9;

        }

        .number2 {
            font-weight: 500;
        }

        .rating {
            font-size: 20px;
            color: #a1aab9;
        }

        .number3 {
            font-weight: 500;
        }
    </style>
</head>

<canvas id="bubbles"></canvas>

<body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <ul class="navbar-nav bd-navbar-nav flex-row">
            <li class="nav-item">
                <form style="margin: 5;" id="logout" action="/users/logout" method="GET">
                    <button style="font-size : 20px" class="btn btn-outline-light my-2 my-sm-0" type="submit">
                        Logout</button>

                </form>
            </li>
        </ul>
        <ul class="navbar-nav flex-row ml-md-auto d-none d-md-flex">
            <li>
                <form class="nav-link waves-effect waves-light" action="/home" method="GET" id="profile"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-home"></i> <button
                        style="font-size : 20px" class="btn btn-outline-light my-2 my-sm-0" type="submit">
                        Home</button>
                </form>
            </li>
        </ul>
    </nav>

    <section class="container">
        <h1 align="center">PROFILE</h1>

        <div class="container mt-5 d-flex justify-content-center">

            <div class="card p-3">

                <div class="d-flex align-items-center">
                    <% if (userData.url_avatar !='no url' ) { %>
                        <div>
                            <img src=<%=userData.url_avatar%> class="rounded" height="155">
                        </div>
                        <% } else{ %>
                            <div>
                                <img src="..\zamay2.png" class="rounded" height="155">
                            </div>
                            <% } %>
                                <div class="ml-3 w-100">

                                    <h2 class="mb-0 mt-0">
                                        <%= userData.name %>
                                    </h2>


                                    <p style="font-size:18px">Email: <%= userData.email %>
                                    </p>

                                    <p style="font-size:18px">Telegram username: <%= userData.telegram_username %>
                                    </p>




                                    <div
                                        class="p-2 mt-2 bg-primary d-flex justify-content-between rounded text-white stats">

                                        <div class="d-flex flex-column">

                                            <span class="articles">Tasks</span>
                                            <span class="number1">
                                                <%= userData.tasks_completed + userData.tasks_failed %>
                                            </span>

                                        </div>

                                        <div class="d-flex flex-column">

                                            <span class="followers">Success</span>
                                            <span class="number2">
                                                <%=userData.tasks_completed%>
                                            </span>

                                        </div>

                                        <% if (userData.tasks_completed + userData.tasks_failed != 0 ) { %>


                                            <div class="d-flex flex-column">

                                                <span class="rating">Rating %</span>
                                                <span class="number3">
                                                    <%= (userData.tasks_completed/(userData.tasks_completed +
                                                        userData.tasks_failed)).toFixed(2)*100 %>
                                                </span>

                                            </div>
                                            <% } else{ %>

                                                <div class="d-flex flex-column">

                                                    <span class="rating">Rating %</span>
                                                    <span class="number3">0</span>

                                                </div>


                                                <% } %>

                                    </div>


                                </div>



                </div>

            </div>
        </div>
        <div style="margin-top: 20;">
            <form action="/home/add-tg-username" method="POST">
                <div align="center"> <input type="text" id="telegram_username" name="telegram_username"
                        placeholder="enter your username" required>
                </div>
                <div class="nav justify-content-center" style="margin: 10">
                    <button style="font-size : 15px;" class="open-popup btn btn-outline-light my-2 my-sm-0">
                        add tg nickname
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor"
                            class="bi bi-telegram" viewBox="0 0 16 16">
                            <path
                                d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.287 5.906c-.778.324-2.334.994-4.666 2.01-.378.15-.577.298-.595.442-.03.243.275.339.69.47l.175.055c.408.133.958.288 1.243.294.26.006.549-.1.868-.32 2.179-1.471 3.304-2.214 3.374-2.23.05-.012.12-.026.166.016.047.041.042.12.037.141-.03.129-1.227 1.241-1.846 1.817-.193.18-.33.307-.358.336a8.154 8.154 0 0 1-.188.186c-.38.366-.664.64.015 1.088.327.216.589.393.85.571.284.194.568.387.936.629.093.06.183.125.27.187.331.236.63.448.997.414.214-.02.435-.22.547-.82.265-1.417.786-4.486.906-5.751a1.426 1.426 0 0 0-.013-.315.337.337 0 0 0-.114-.217.526.526 0 0 0-.31-.093c-.3.005-.763.166-2.984 1.09z" />
                        </svg>
                    </button>
                </div>

            </form>
        </div>

        <div style="margin-top: 20;">
            <form action="/home/profile/addAvatar" method="POST">
                <div align="center"> <input type="text" id="avatar_url" name="avatar_url" placeholder="enter your url"
                        required>
                </div>
                <div class="nav justify-content-center" style="margin: 10">
                    <button style="font-size : 15px;" class="open-popup btn btn-outline-light my-2 my-sm-0">
                        add avatar url
                        <i class="fa fa-photo"></i>
                    </button>
                </div>

            </form>
        </div>


        <script>
            (function () {

                var width, height, canvas, ctx, circles, target, animateHeader = true;

                // Main
                initHeader();
                addListeners();

                function initHeader() {
                    width = window.innerWidth;
                    height = window.innerHeight;
                    target = { x: 0, y: height };



                    canvas = document.getElementById('bubbles');
                    canvas.width = width;
                    canvas.height = height;
                    ctx = canvas.getContext('2d');

                    // create particles
                    circles = [];
                    for (var x = 0; x < width * 0.9; x++) {
                        var c = new Circle();
                        circles.push(c);
                    }
                    animate();
                }

                // Event handling
                function addListeners() {
                    window.addEventListener('scroll', scrollCheck);
                    window.addEventListener('resize', resize);
                }

                function scrollCheck() {
                    if (document.body.scrollTop > height) animateHeader = false;
                    else animateHeader = true;
                }

                function resize() {
                    width = window.innerWidth;
                    height = window.innerHeight;
                    canvas.width = width;
                    canvas.height = height;
                }

                function animate() {
                    if (animateHeader) {
                        ctx.clearRect(0, 0, width, height);
                        for (var i in circles) {
                            circles[i].draw();
                        }
                    }
                    requestAnimationFrame(animate);
                }

                // Canvas manipulation
                function Circle() {
                    var _this = this;

                    // constructor
                    (function () {
                        _this.pos = {};
                        init();
                    })();

                    function init() {
                        _this.pos.x = Math.random() * width;
                        _this.pos.y = height + Math.random() * 100;
                        _this.alpha = 0.1 + Math.random() * 0.9;
                        _this.scale = 0.1 + Math.random() * 0.9;
                        _this.velocity = Math.random();
                    }

                    this.draw = function () {
                        if (_this.alpha <= 0) {
                            init();
                        }
                        _this.pos.y -= _this.velocity;
                        _this.alpha -= 0.0005;
                        ctx.beginPath();
                        ctx.arc(_this.pos.x, _this.pos.y, _this.scale * 10, 0, 2 * Math.PI, false);
                        ctx.fillStyle = 'rgba(157,188,225,' + _this.alpha + ')';
                        ctx.fill();
                    };
                }

            })();
        </script>
</body>

</html>